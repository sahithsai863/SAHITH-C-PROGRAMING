CALL BY VALUE:-
#include<stdio.h>
void swapx(int x,int y)
{
    int t;
    t=x;
    x=y;
    y=t;
    printf("Inside swapx:x=%d y=%d\n",x,y);
}
int main()
{
    int a=10,b=20;
    swapx(a,b);
    printf("Inside main:a=%d b=%d\n",a,b);
    return 0;
}

OUTPUT:-
Inside swapx:x=20 y=10
Inside main:a=10 b=20


=== Code Execution Successful ===
*************************************************************************
CALL BY RFERENCE:-

#include<stdio.h>
void swapx(int *x,int *y)
{
    int t;
    t=*x;
    *x=*y;
    *y=t;
    printf("Inside swapx:x=%d y=%d\n",*x,*y);
}
int main()
{
    int a=10,b=20;
    swapx(&a,&b);
    printf("Inside main:a=%d b=%d\n",a,b);
    return 0;
}
OUTPUT:-
Inside swapx:x=20 y=10
Inside main:a=20 b=10


=== Code Execution Successful ===
*********************************************************************************
RECURSION FACTORIAL:-

#include<stdio.h>
long int multiplyNumbers(int n);
int main() 
{
    int n;
    printf("Enter a positive integer:");
    scanf("%d",&n);
    printf("Factorial of %d=%ld",n,multiplyNumbers(n));
    return 0;
}
long int multiplyNumbers(int n)
{
    if (n>=1)
    return n*multiplyNumbers(n-1);
    else
    return 1;
}
OUTPUT:-
Enter a positive integer:4
Factorial of 4=24

=== Code Execution Successful ===
******************************************************************************
RECURSION FIBONACCI SERIES:-
#include <stdio.h>
int fibonacci(int n) {
    if (n <= 0) {
        return 0;
    } else if (n == 1) {
        return 1;
    } else {
        return fibonacci(n - 1) + fibonacci(n - 2);
    }
}
int main() {
    int n=10, i;
     printf("Fibonacci Series: ");
    for (i = 0; i < n; i++) {
        printf("%d ", fibonacci(i));
    }
     return 0;
}
OUTPUT:-
Fibonacci Series: 0 1 1 2 3 5 8 13 21 34 

=== Code Execution Successful ===
***************************************************************
